{"version":3,"sources":["Context/Context.tsx","components/auth/PrivateRoute.tsx","components/BaseLayout/AuthForm.tsx","components/auth/index.tsx","components/BaseLayout/BaseLayout.tsx","pages/SignIn/SignIn.tsx","pages/SignUp/SignUp.tsx","components/UserComponent/UserCard.tsx","components/UserComponent/RepoList.tsx","pages/Main.tsx","Routes/Routes.tsx","config/firebaseConfig.ts","serviceWorker.ts","index.tsx"],"names":["userContext","createContext","PrivateRoute","Component","component","rest","context","useContext","render","props","user","uid","to","pathname","state","from","location","onErrorMessage","e","notification","error","message","description","onSuccessMessage","success","AuthForm","formName","onHandleChange","className","name","initialValues","remember","onFinish","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","valuePropName","noStyle","href","htmlType","cookies","Cookies","setUsetInCocke","c","value","JSON","stringify","set","path","maxAge","Header","Layout","Content","Footer","BaseLayout","children","selectMenu","username","setUser","email","split","style","textTransform","margin","mode","float","background","key","onClick","remove","minHeight","padding","textAlign","SignIn","values","password","firebase","auth","signInWithEmailAndPassword","then","res","catch","SignUp","createUserWithEmailAndPassword","Meta","Card","UserCard","console","log","hoverable","width","cover","alt","src","avatar_url","title","bio","RepoList","repoUrl","useState","repoList","setRepoList","fetchRepoList","reposUrl","a","Axios","get","data","useEffect","repos_url","size","bordered","dataSource","renderItem","item","i","Search","Input","Main","userData","setUserData","loading","setLoading","fetchUser","onSearch","enterButton","span","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Routes","undefined","window","isAuthenticate","Provider","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68ce6c0f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const userContext = createContext<Partial<any>>({});\r\n","import React, { FC, useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticate } from \"./index\";\r\nimport { userContext } from \"../../Context/Context\";\r\n\r\nconst PrivateRoute: FC<{ component: any; exact: boolean; path: string }> = ({ component: Component, ...rest }) => {\r\n  const context = useContext(userContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        context.user?.uid ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/signin\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { FC, useContext } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { Store } from \"antd/lib/form/interface\";\r\nimport { isSignOut } from \"../auth\";\r\nimport { userContext } from \"../../Context/Context\";\r\n\r\ninterface AuthForm {\r\n  onHandleChange: (value: Store) => void;\r\n  formName: string;\r\n  value?: Store;\r\n}\r\n\r\nexport const onErrorMessage = (e: string) => {\r\n  notification.error({\r\n    message: \"Auth Error\",\r\n    description: e,\r\n  });\r\n};\r\nexport const onSuccessMessage = (e: string) => {\r\n  notification.success({\r\n    message: e,\r\n  });\r\n};\r\nconst AuthForm: FC<AuthForm> = ({ formName, onHandleChange }) => {\r\n  return (\r\n    <div>\r\n      <h1 className='form-header'>{formName}</h1>\r\n      <Form name='normal_login' className='login-form box-shadow' initialValues={{ remember: true }} onFinish={onHandleChange}>\r\n        <Form.Item name='username' rules={[{ required: true, message: \"Please input your Username!\" }]}>\r\n          <Input prefix={<UserOutlined className='site-form-item-icon' />} placeholder='Username' />\r\n        </Form.Item>\r\n        <Form.Item name='password' rules={[{ required: true, message: \"Please input your Password!\" }]}>\r\n          <Input prefix={<LockOutlined className='site-form-item-icon' />} type='password' placeholder='Password' />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name='remember' valuePropName='checked' noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <a className='login-form-forgot' href=''>\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type='primary' htmlType='submit' className='login-form-button'>\r\n            {formName}\r\n          </Button>\r\n          <br />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","/* eslint-disable no-restricted-globals */\r\nimport React, { useContext } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { onSuccessMessage } from \"../BaseLayout/AuthForm\";\r\nimport { userContext } from \"../../Context/Context\";\r\nconst cookies = new Cookies();\r\n\r\ninterface User {\r\n  email: string;\r\n  uid: string | undefined;\r\n}\r\n\r\nconst setCookie = (c: Cookies, name: string, value: any) => {\r\n  c.set(name, value, { path: \"/\", maxAge: 31536000 });\r\n};\r\n\r\nexport const setUsetInCocke = (user: User) => {\r\n  setCookie(cookies, \"user\", JSON.stringify(user));\r\n};\r\n\r\nexport const isAuthenticate = () => {\r\n  if (window !== undefined) {\r\n    const user = cookies.get(\"user\");\r\n    console.log(user);\r\n\r\n    return user;\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const isSignOut = () => {\r\n  cookies.remove(\"user\");\r\n  onSuccessMessage(\"You have successfull logout\");\r\n};\r\n","import React, { FC, useContext } from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { userContext } from \"../../Context/Context\";\r\nimport \"./BaseLayout.scss\";\r\nimport { isSignOut, isAuthenticate } from \"../auth\";\r\nimport { UserOutlined } from \"@ant-design/icons/lib/icons\";\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst BaseLayout: FC<{ children: React.ReactNode; selectMenu?: string }> = ({ children, selectMenu }) => {\r\n  const context = useContext(userContext);\r\n  const { user, setUser } = context;\r\n  let username = user ? user.email.split(\"@\") : \"\";\r\n\r\n  if (context.user === null) {\r\n    return <Redirect to='/signin' />;\r\n  }\r\n  const onSignOut = () => {\r\n    isSignOut();\r\n    context.setUser(null);\r\n  };\r\n  return (\r\n    <div className='main-wrapper'>\r\n      <Layout className='layout'>\r\n        <Header className='header-wrapper'>\r\n          <div className='username'>\r\n            <div className='icon'>\r\n              <UserOutlined />\r\n            </div>\r\n            <h3 style={{ textTransform: \"capitalize\", margin: \"0\" }}>{username[0]}</h3>\r\n          </div>\r\n          {user ? (\r\n            <Menu mode='horizontal' style={{ float: \"right\", background: \"none\" }}>\r\n              <Menu.Item key='1'>\r\n                <Link to='/'>Home</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key='4' onClick={onSignOut}>\r\n                SignOut\r\n              </Menu.Item>\r\n            </Menu>\r\n          ) : (\r\n            <Menu mode='horizontal' style={{ float: \"right\", background: \"none\" }}>\r\n              <Menu.Item key='2'>\r\n                <Link to='/signin'>SignIn</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key='3'>\r\n                <Link to='/signup'>SignUp</Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          )}\r\n        </Header>\r\n        <Content style={{ minHeight: \"calc(100vh - 64px)\", padding: \"0 50px\" }}>{children}</Content>\r\n        <Footer style={{ textAlign: \"center\" }}>Shadab &copy; 2020</Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseLayout;\r\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { FC, useState, useContext } from \"react\";\r\nimport \"./SignIn.scss\";\r\nimport { Store } from \"antd/lib/form/interface\";\r\nimport { userContext } from \"../../Context/Context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout\";\r\nimport { setUsetInCocke, isAuthenticate } from \"../../components/auth/index\";\r\nimport firebase from \"firebase/app\";\r\nimport AuthForm, { onErrorMessage, onSuccessMessage } from \"../../components/BaseLayout/AuthForm\";\r\n\r\nconst SignIn: FC = () => {\r\n  const context = useContext(userContext);\r\n  const onSignin = (values: Store) => {\r\n    const { username, password } = values;\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(username, password)\r\n      .then((res) => {\r\n        context.setUser({ email: username, uid: res.user?.uid });\r\n        setUsetInCocke({ email: username, uid: res.user?.uid });\r\n        onSuccessMessage(\"You have successfull SignIn\");\r\n      })\r\n      .catch((e) => {\r\n        onErrorMessage(e.message);\r\n      });\r\n  };\r\n\r\n  if (context.user?.uid) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <BaseLayout selectMenu='2'>\r\n      <div className='signin-wrapper'>\r\n        <AuthForm formName='SignIn' onHandleChange={onSignin} />\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { FC, useState, useContext } from \"react\";\r\nimport \"./SignUp.scss\";\r\nimport { Store } from \"antd/lib/form/interface\";\r\nimport { userContext } from \"../../Context/Context\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport BaseLayout from \"../../components/BaseLayout/BaseLayout\";\r\nimport firebase from \"firebase/app\";\r\nimport { setUsetInCocke } from \"../../components/auth\";\r\nimport AuthForm, { onErrorMessage } from \"../../components/BaseLayout/AuthForm\";\r\n\r\nconst SignUp: FC = () => {\r\n  const context = useContext(userContext);\r\n  const onSignUp = (values: Store) => {\r\n    const { username, password } = values;\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(username, password)\r\n      .then((res) => {\r\n        setUsetInCocke({ email: username, uid: res.user?.uid });\r\n      })\r\n      .catch((error) => {\r\n        onErrorMessage(error.message);\r\n      });\r\n  };\r\n  if (context.user?.uid) {\r\n    return <Redirect to='/' />;\r\n  }\r\n  return (\r\n    <BaseLayout selectMenu='3'>\r\n      <div className='signup-wrapper'>\r\n        <AuthForm formName='SignUp' onHandleChange={onSignUp} />\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\nimport { Card } from \"antd\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst UserCard = ({ user }: any) => {\r\n  console.log(\"cared \" + JSON.stringify(user));\r\n\r\n  return (\r\n    <div>\r\n      <Card hoverable style={{ width: 300 }} cover={<img alt={user.name} src={user.avatar_url} />}>\r\n        <Meta title={user.name} description={user.bio} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { FC, useState, useEffect, ReactNode } from \"react\";\r\nimport { onErrorMessage } from \"../BaseLayout/AuthForm\";\r\nimport { List, Typography, Divider } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nconst RepoList: FC<any> = ({ repoUrl }) => {\r\n  const [repoList, setRepoList] = useState<any>([]);\r\n  const fetchRepoList = async (reposUrl: string) => {\r\n    try {\r\n      const { data } = await Axios.get(reposUrl);\r\n      setRepoList(data);\r\n    } catch (err) {\r\n      onErrorMessage(\"something wents Wrong\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchRepoList(repoUrl.repos_url);\r\n  }, [repoUrl]);\r\n  return (\r\n    <div>\r\n      <List\r\n        size='large'\r\n        bordered\r\n        dataSource={repoList}\r\n        renderItem={(item: any, i: number) => (\r\n          <List.Item>\r\n            {i + 1} ; {item.name}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepoList;\r\n","import React, { FC, useState, useEffect } from \"react\";\r\nimport \"./Main.scss\";\r\nimport { Layout, Menu, Breadcrumb, Input, Row, Col, Spin, Space } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport BaseLayout from \"../components/BaseLayout/BaseLayout\";\r\nimport { onSuccessMessage, onErrorMessage } from \"../components/BaseLayout/AuthForm\";\r\nimport UserCard from \"../components/UserComponent/UserCard\";\r\nimport RepoList from \"../components/UserComponent/RepoList\";\r\nimport { SearchOutlined } from \"@ant-design/icons/lib/icons\";\r\nconst { Search } = Input;\r\n\r\ninterface IState {\r\n  userName: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst Main: FC = () => {\r\n  const [userData, setUserData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchUser = async (value: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await Axios.get(`https://api.github.com/users/${value}`);\r\n      setUserData(data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      onErrorMessage(\"user Not able to locate \");\r\n    }\r\n  };\r\n\r\n  console.log(userData);\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className='github-page'>\r\n        <div className='search-wrapper'>\r\n          <Search\r\n            placeholder='type your github username'\r\n            prefix={<SearchOutlined />}\r\n            size='large'\r\n            onSearch={fetchUser}\r\n            enterButton='Search'\r\n          />\r\n        </div>\r\n        <div className='user-wrapper'>\r\n          {loading ? (\r\n            <Space size='middle'>\r\n              <Spin size='large' />\r\n            </Space>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {userData ? (\r\n            <Row>\r\n              <Col span={8}>\r\n                <h3>User Profile</h3>\r\n                <UserCard user={userData} />\r\n              </Col>\r\n              <Col span={16}>\r\n                <h3>Repo List</h3>\r\n                <RepoList repoUrl={userData} />\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"../components/auth/PrivateRoute\";\r\nimport SignIn from \"../pages/SignIn/SignIn\";\r\nimport SignUp from \"../pages/SignUp/SignUp\";\r\nimport Main from \"../pages/Main\";\r\nimport { userContext } from \"../Context/Context\";\r\nimport firebaseConfig from \"../config/firebaseConfig\";\r\n// fireBase\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { isAuthenticate } from \"../components/auth\";\r\n\r\n// initialise firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Routes = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  if (user === null) {\r\n    setUser(isAuthenticate());\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <userContext.Provider value={{ user, setUser, loading, setLoading }}>\r\n        <Switch>\r\n          <Route exact path='/signup' component={SignUp} />\r\n          <Route exact path='/signin' component={SignIn} />\r\n          <PrivateRoute exact path='/' component={Main} />\r\n        </Switch>\r\n      </userContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default {\r\n  apiKey: \"AIzaSyA26AHHNsf2yzwG_lIKLm9oXOpUsZhu9WE\",\r\n  authDomain: \"githubapi-dba95.firebaseapp.com\",\r\n  databaseURL: \"https://githubapi-dba95.firebaseio.com\",\r\n  projectId: \"githubapi-dba95\",\r\n  storageBucket: \"githubapi-dba95.appspot.com\",\r\n  messagingSenderId: \"31521074413\",\r\n  appId: \"1:31521074413:web:1b6e35e8f15d455c0870e4\",\r\n  measurementId: \"G-6V0SDNSRS8\",\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes/Routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}